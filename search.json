[{"title":"Git学习——git-bash","url":"/posts/2.html","content":"Git-bash学习资料合集\n\n基础教程:菜鸟教程\n菜鸟教程:图解 Git\nPro Git v2: pdf html\ngit自带帮助文档git help xxx / git\\mingw64\\share\\doc\\git-doc\\*.html\nCSDN: Git命令\n知乎: git系列\n极客笔记：Git 教程\n Github Repository操作\n\n1. git init 初始化仓库\n\n【Git ‘git init’ 命令详解】\n-q / --quiet ：静默模式   仅打印erro/warning信息，成功则无显示；但其实成功初始化也并无太多输出\n–bare &lt;git_dir&gt; ：指定仓库信息存放文件夹&quot;repository/版本库&quot;，默认.git就行，也可以改成.GIT, .Git；如果没有参数，只输入–bare，会在当前文件夹生成仓库信息文件，而且当前目录好像就没啥用了\nseparate-git-dir= ：指定仓库信息存放文件夹，但在当前文件夹生成一个&quot;链接文件&quot;，里面写有\n-b  / --initial-branch=    ：指定初始化仓库时创建的分支，默认为master/main，有时候需要main，但初始化默认为master，免得后面再改，再初始化时直接改分支名；或者直接修改全局配置git/etc/gitconfig:[init] defaultBranch=main\n其余还有共享、格式等参数，不太懂，用不上；.git文件夹详情见帮助文档\n\n2. git add 添加文件到暂存区\n\n【Git ‘git add’ 命令详解】\n【git系列】git-add 含义用法选项示例详解\n\ngit add  ：添加文件到暂存区，可以添加多个文件，用空格隔开，也可以用通配符，如git add .，表示添加当前目录下所有文件\n-n / --dry-run ：模拟添加，不实际添加，可以用来查看哪些文件会被添加\n-v / --verbose ：详细输出，显示哪些文件被添加\n-f / --force    ：强制添加，即使文件被忽略(.gitignore)，也强制添加\n-i / --interactive ：交互式添加，可以手动选择哪些文件添加\n\nstatus ：类似于git status；显示以track的文件状态，包括已提交的修改(staged)和(unstaged)\nupdate ：类似于git add -u；更新已选中的文件，可以手动选择哪些文件更新，支持正则表达式*-以及移除-\nrevert ：类似于git reset；还原已选中的文件\nadd untracked ：添加未跟踪的文件\npatch ：不懂，似乎可以保存修改记录应用到其他仓库/分支\ndiff  ：类似于git diff；查看文件的更新记录\n\n\n-u / --update ：更新已跟踪的文件，即已添加到暂存区的文件，如果文件有修改，则更新到暂存区\n–renormalize：清除CRLF/LF；统一不同系统之间的换行符：CR——CR，CRLF——LF，CRCRLF——CRLF\n其他参数不太懂\n\n3. git commit 提交暂存区的文件\n\n【Git ‘git commit’ 命令详解】\n【git系列】git-commit含义用法选项示例详解\n\n-m / --message  ：提交信息，必选参数，否则会进入vim编辑器，输入提交信息\nF / --file= ：从文件中读取提交信息\n-a / --all ：自动添加已修改的文件到暂存区，再提交，即下次再提交这些文件不用再git add\n-u / --untracked-files ：显示未跟踪的文件，默认all\n-v / --verbose ：详细输出，显示哪些文件被提交\n–dry-run ：模拟提交，不实际提交，可以用来查看哪些文件会被提交\n–amend ：修改最后一次提交，即修改最后一次提交的提交信息、提交文件、提交人等\n–no-edit ：不进入vim编辑器，直接提交\n\n4. git status 查看仓库状态\n\nGit status命令详细指南\n-s / --short ：简短输出，\n–long：长格式输出\n-v / --verbose ：详细输出，显示文件的状态和文件名；类似于git diff --cached -v\n–ignored ：显示被忽略的文件\n-u / --untracked-files ：显示未跟踪的文件\n-b / --branch ：显示当前分支\n\n5. git diff 查看文件差异\n\n-p / -u / -patch：生成patch文件\n\n"},{"title":"基于Hexo搭建个人网页(简中简，完善中...)","url":"/posts/1.html","content":"0.系统环境\n\n开发系统：Windows 10 Professional  x64\n测试浏览器：Edge 138.0.3351.77 (正式版本) (64 位)及140.0.3421.0 (正式版本) dev (64 位)\n*后续软件安装均为windows x64版本\nhexo配置文件分两类：站点(全局)配置、主题配置\nhexo中的网页分为两种page、post，page是页面，post是文章，page和post都放在source文件夹下，但page在source下，post在source/_post下\nhexo也可以自定义页面，参考自定义页面\n也可以在默认page上修改某一页面的index.md，来修改页面的布局\nmd文件支持原生markdown、css、html等语法\nhexo自带tags(根据标签分类的页面)、categories(根据类别分类的页面)、about(关于)、link(友情链接)、archives(根据时间线排序)等page，可通过修改_config.yml中menu配置项来添加或删除\nhexo新建\n\n1. 下载node.js和git\n2. 安装hexo\n创建hexo_blog_main文件夹，进入文件夹，右键选择Git Bash Here，输入以下命令：\nnpm install -g hexo-cli #安装，后续新建hexo blog不需重新下载，跳过该命令hexo init   #初始化\n初始化成功后在当前路径会新建如下文件/文件夹:\n\n其中，_config.landscape.yml是默认主题(landscape)的配置文件，主题在_config.yml中设置，但需提前下载(见下一步)，_config.yml是hexo的配置文件，hexo博客的配置都在这个文件中，包括主题、插件、插件配置等；themes文件夹下放置主题文件夹；source文件夹下放置全局配置、资源，如博客文章/_post/*.md结尾、本地图片/img/*、配置/css/mystyle.css、/js/star-canvas.js、字体/fonts/*.ttf、页面/introduction/index.md、html等、插件/live2d*；\n3. 安装butterfly主题及插件\n直接下载butterfly仓库zip或者git克隆\ngit clone -b master https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterflynpm install hexo-renderer-pug hexo-renderer-stylus --save #butterfly渲染插件npm install hexo-wordcount --save #文章数词插件...#搜索栏，其他插件，忘了\n下载live2d-widget、live2d-api、xiaomai模型\n新版live2d-widget的autoload.js、*.css被放在了dist文件夹中，修改路径时需加上/dist/。\n4. 配置github pages\n在github上创建一个仓库，仓库名为linphone-young.github.io\n网站配置文件_config.yml中添加：\ndeploy:  type: git  repository: git@github.com:linphone-young/linphone-young.github.io.git  branch: main\nhexo三连: hexo clean; hexo g; hexo d;\n访问https://linphone-young.github.io/\nhexo g 会生成/public文件夹，hexo d会将public文件夹中的内容推送到github仓库，github仓库中的内容即为网站内容\n5. 推送到搜索引擎\nhttps://shutiaoz.top/指南/Hexo/Hexo_Push_To_Search_Engine/\n","categories":["Hexo","butterfly"],"tags":["Hexo","butterfly"]}]